<?php
/**
 * @file
 * Module file for deposit_block.
 */

/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function deposit_block_block_info() {
  // This hook returns an array, each component of which is an array of block
  // information. The array keys are the 'delta' values used in other block
  // hooks.

  $blocks['add_deposit'] = array(
    // info: The name of the block.
    'info' => t('Block of links to deposit content'),
    // Block caching options (per role, per user, etc.)
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function deposit_block_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'add_deposit':
      $block['subject'] = t('Deposit');
      $block['content'] = deposit_block_contents($delta);
      break;
  }
  return $block;
}

/**
 * A module-defined block content function.
 */
function deposit_block_contents($delta) {
  switch ($delta) {
    case 'add_deposit':
			$group = new ContentTypeGroup('deposit'); // Get the content type group of the given machine name	
			$menu_items = array('<ul>');
				foreach ($group->typeList() as $key => $type) {
					$menu_items[] = '<li>'. l($type, 'node/add/'.$key) .'</li>';
				}
			$menu_items[] = '</ul>';
      return implode("\n", $menu_items);
  }
}

/******** Unneccessary for this module? *********/

/**
 * Implements hook_menu().
 *
 * Provides a default page to explain what this module does.
 */
function deposit_block_menu() {
  $items['examples/deposit_block'] = array(
    'page callback' => 'deposit_block_page',
    'access callback' => TRUE,
    'title' => 'Deposit',
  );
  return $items;
}
